#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression "Ensuring downward compatibility..."

if ynh_app_upgrading_from_version_before 5.130.4~ynh1; then
    ynh_die "Your installation is to old to update to this version. \
        \nPlease first manually update with 5.130.4~ynh1 with the following command: \
        \n's\0u\0d\0o yunohost app upgrade $app -u https://github.com/YunoHost-Apps/ghost_ynh/tree/dbc9d5b8e0cbc34a410a31f3682ead2136a4d683' \
        \nOnce done you can upgrade to the latest version."
fi

# If db_name doesn't exist, create it
if [ -z "$db_name" ]; then
	db_name=$(ynh_sanitize_dbid --db_name=$app)
	ynh_app_setting_set --key=db_name --value=$db_name
fi

# Make sure the .config directory belongs to $app:$app
if [[ ! -d "$install_dir/.config" ]]; then
	mkdir $install_dir/.config
	chown $app:$app $install_dir/.config
elif [[ $(stat -c "%U:%G" $install_dir/.config) != "$app:$app" ]]; then
	chown -R $app:$app $install_dir/.config
fi

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service=$app --action=stop --log_path="systemd" --wait_until="Ghost has shut down" --timeout=60

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
ynh_script_progression "Updating NodeJS..."

ynh_nodejs_install

#=================================================
# UPGRADE
#=================================================

# Up to v5.26.4~ynh1, we were downloading the source code and building the app by ourselves
# that was a mess to maintain, let's move away from that
if ynh_app_upgrading_from_version_before_or_equal_to 5.26.4~ynh1
then

	ynh_script_progression "Upgrading from older packaging of $app..."

	# Create a temporary directory
	tmpdir="$(mktemp -d)"

	# Backup the content folder to the temp dir
	if [ -f "$install_dir/config.production.json" ]
	then
		# Old versions of Ghost stored it here
		cp -ar "$install_dir/content" "$tmpdir/content"
	else
		# New versions of Ghost store it here
		cp -ar "$install_dir/ghost/core/content" "$tmpdir/content"
	fi

	# Remove the app directory securely
	ynh_safe_rm $install_dir

	# Recreate it
	mkdir -p $install_dir

	chmod 750 "$install_dir"
	chmod -R o-rwx "$install_dir"
	chown -R $app:$app "$install_dir"

	pushd $install_dir
		ynh_hide_warnings ynh_exec_as_app npm install npm@latest
		ynh_hide_warnings ynh_exec_as_app npm install ghost-cli@latest
		ynh_hide_warnings ynh_exec_as_app $install_dir/node_modules/.bin/ghost install $(ynh_app_upstream_version) \
			--no-prompt --no-setup-systemd --no-start \
			--dir ghost --no-setup-linux-user \
			--no-setup-nginx --no-setup-ssl --url https://$domain$path --port $port \
			--db mysql --dbhost 127.0.0.1 --dbuser $db_user --dbpass $db_pwd --dbname $db_name \
			--mail SMTP --mailhost 127.0.0.1 --mailport 465
	popd

	# Copy content folder back to the install_dir
	cp -ar "$tmpdir/content" "${install_dir}/ghost/content"

	# Remove the tmp directory securely
	ynh_safe_rm "$tmpdir"

else

	# Upgrade Ghost CLI
	pushd $install_dir
		ynh_hide_warnings ynh_exec_as_app npm install npm@latest
		ynh_hide_warnings ynh_exec_as_app npm install ghost-cli@latest
	popd

	pushd $install_dir/ghost
		# Make sure the app does not expect to manage its own process
		ynh_hide_warnings ynh_exec_as_app $install_dir/node_modules/.bin/ghost config --process local
		# Upgrade Ghost itself
		ynh_hide_warnings ynh_exec_as_app $install_dir/node_modules/.bin/ghost update $(ynh_app_upstream_version) \
			--no-prompt --no-auto-rollback --no-restart --force
	popd

fi

# Make sure the configuration is correct
pushd $install_dir/ghost
	ynh_hide_warnings ynh_exec_as_app $install_dir/node_modules/.bin/ghost config \
		--port $port --process local \
		--url https://$domain$path \
                --mail SMTP --mailuser noreply@$domain --mailpass $mail_pwd --mailhost 127.0.0.1 --mailport 25
popd

config_file=$install_dir/ghost/config.production.json
cat <<< $(jq -r '.database.connection.host = "127.0.0.1"' $config_file) > $config_file
cat <<< $(jq -r '.mail.options.host = "127.0.0.1"' $config_file) > $config_file
cat <<< $(jq -r '.mail.options.ignoreTLS = true' $config_file) > $config_file

if [ ! -s "$config_file" ]; then
    ynh_die "Something went wrong while setting up the configuration file: it ended up empty."
fi

# Cleanup cache
ynh_safe_rm "$install_dir/.cache/yarn"

#=================================================
# REAPPLY SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression "Upgrading system configurations related to $app..."

ynh_config_add_nginx

ynh_config_add_systemd

ynh_config_add_logrotate "$install_dir/ghost/content/logs"

yunohost service add $app --description="$app daemon for Ghost" --log="$install_dir/ghost/contents/logs"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service=$app --action=start --log_path="systemd" --wait_until="Ghost booted" --timeout=60

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"

#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..."

# If db_name doesn't exist, create it
if [ -z "$db_name" ]; then
	db_name=$(ynh_sanitize_dbid --db_name=$app)
	ynh_app_setting_set --app=$app --key=db_name --value=$db_name
fi

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..."

ynh_systemd_action --service_name=$app --action=stop

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
# Install Nodejs
ynh_install_nodejs --nodejs_version=$NODEJS_VERSION

# Upgrade NPM
ynh_npm install --global npm@latest

# Install Yarn
ynh_npm install --global yarn

#=================================================
# FETCH LATEST GHOST AND PLACE IN /versions/
#=================================================

# Define the new version
NEW_VERSION="5.59.1"

# Download the latest Ghost release
wget -O ghost-$NEW_VERSION.zip https://github.com/TryGhost/Ghost/releases/download/$NEW_VERSION/Ghost-$NEW_VERSION.zip

# Move and rename the downloaded release
mv ghost-$NEW_VERSION.zip /var/www/ghost/ghost/versions/$NEW_VERSION.zip

# Unzip the downloaded release
unzip /var/www/ghost/ghost/versions/$NEW_VERSION.zip -d /var/www/ghost/ghost/versions/$NEW_VERSION

# Update the version in manifest.toml and change the NodeJS ver
sed -i "s/version = \".*\"/version = \"$NEW_VERSION\"/" ../manifest.toml

sed -i "s/NODEJS_VERSION=.*$/NODEJS_VERSION=18/" _common.sh

# UPGRADE
#=================================================

# Up to v5.26.4~ynh1, we were downloading the source code and building the app by ourselves
# that was a mess to maintain, let's move away from that
if ynh_compare_current_package_version --comparison le --version 5.26.4~ynh1
then

	ynh_script_progression --message="Upgrading from older packaging of Ghost..."

	# Create a temporary directory
	tmpdir="$(mktemp -d)"

	# Backup the content folder to the temp dir
	if [ -f "$install_dir/config.production.json" ]
	then
		# Old versions of Ghost stored it here
		cp -ar "$install_dir/content" "$tmpdir/content"
	else
		# New versions of Ghost store it here
		cp -ar "$install_dir/ghost/core/content" "$tmpdir/content"
	fi

	# Remove the app directory securely
	ynh_secure_remove --file=$install_dir

	# Recreate it
	mkdir -p $install_dir

	chmod 750 "$install_dir"
	chmod -R o-rwx "$install_dir"
	chown -R $app:www-data "$install_dir"

	pushd $install_dir
		ynh_exec_as $app $ynh_node_load_PATH $ynh_npm install ghost-cli@latest
		ynh_exec_as $app $ynh_node_load_PATH $install_dir/node_modules/ghost-cli/bin/ghost install $(ynh_app_upstream_version) \
			--no-prompt --no-setup-systemd --no-start \
			--dir ghost --no-setup-linux-user \
			--no-setup-nginx --no-setup-ssl --url http://$domain$path --port $port \
			--db mysql --dbhost localhost --dbuser $db_user --dbpass $db_pwd --dbname $db_name \
			--mail SMTP --mailhost localhost --mailport 465
	popd

	# Copy content folder back to the install_dir
	cp -ar "$tmpdir/content" "${install_dir}/ghost/content"

	# Remove the tmp directory securely
	ynh_secure_remove --file="$tmpdir"

else

	# Upgrade Ghost CLI
	pushd $install_dir
		ynh_exec_as $app $ynh_node_load_PATH $ynh_npm install ghost-cli@latest
	popd

	# Upgrade Ghost itself
	pushd $install_dir/ghost
		ynh_exec_as $app $ynh_node_load_PATH $install_dir/node_modules/ghost-cli/bin/ghost update $(ynh_app_upstream_version) \
			--no-prompt --no-auto-rollback --no-restart
	popd

fi

# Make sure the configuration is correct
pushd $install_dir/ghost
	ynh_exec_as $app $ynh_node_load_PATH $install_dir/node_modules/ghost-cli/bin/ghost config \
		--port $port --process local
popd

# Cleanup cache
ynh_secure_remove --file="$install_dir/.cache/yarn"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..."

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# SPECIFIC UPGRADE
#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Upgrading systemd configuration..."

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# GENERIC FINALIZATION
#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression --message="Upgrading logrotate configuration..."

# Use logrotate to manage app-specific logfile(s)
ynh_use_logrotate --logfile="$install_dir/ghost/content/logs" --non-append

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..."

yunohost service add $app --description="$app daemon for Ghost" --log="$install_dir/ghost/contents/logs"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..."

ynh_systemd_action --service_name=$app --action=start --line_match="Ghost booted" --timeout=60

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed"
